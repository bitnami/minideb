language: bash
dist: focal
virt: vm
group: edge
os: linux
services:
  - docker

env:
  global:
    - BASENAME=bitnami/minideb
    - LATEST=buster
    - DISTS_WITH_SNAPSHOT="$LATEST"

.build_job: &build_job
  stage: build
  before_install:
    - docker version
    # Fix for Ubuntu Xenial apt-daily.service triggering
    # https://unix.stackexchange.com/questions/315502/how-to-disable-apt-daily-service-on-ubuntu-cloud-vm-image
    - |
      while sudo fuser /var/{lib/{dpkg,apt/lists},cache/apt/archives}/lock >/dev/null 2>&1; do
        sleep 1
      done
    - sudo rm -f /usr/local/bin/jq
  install:
    - sudo make .installed-requirements
  script:
    - sudo bash buildone $DIST $PLATFORM
    - 'if [[ "$TRAVIS_BRANCH" == "master" && "$DISTS_WITH_SNAPSHOT" =~ (^|[[:space:]])"$DIST"($|[[:space:]]) ]] ; then sudo bash buildone_snapshot $DIST "$(./snapshot_id)" $PLATFORM ; fi'
  after_success:
    - 'if [[ "$TRAVIS_BRANCH" == "master" && "$LATEST" == "$DIST" ]] ; then sudo docker tag "$BASENAME:$DIST-$PLATFORM" "$BASENAME:latest-$PLATFORM" ; fi'
    - 'if [[ "$TRAVIS_BRANCH" == "master" ]] ; then sudo bash pushone $DIST $PLATFORM ; fi'
    - 'if [[ "$TRAVIS_BRANCH" == "master" && "$DISTS_WITH_SNAPSHOT" =~ (^|[[:space:]])"$DIST"($|[[:space:]]) ]] ; then sudo bash pushone "$DIST-snapshot-$(./snapshot_id)" $PLATFORM ; fi'
    - 'if [[ "$TRAVIS_BRANCH" == "master" && "$LATEST" == "$DIST" ]] ; then sudo bash pushone latest $PLATFORM ; fi'

jobs:
  include:
    - stage: shellcheck
      install:
        - sudo apt-get -qq update
        - sudo apt-get install -y shellcheck
      script: bash shellcheck
    - <<: *build_job
      arch: amd64
      env:
        - DIST=jessie PLATFORM=amd64
    - <<: *build_job
      arch: amd64
      env:
        - DIST=stretch PLATFORM=amd64
    - <<: *build_job
      arch: amd64
      env:
        - DIST=buster PLATFORM=amd64
    - <<: *build_job
      arch: arm64-graviton2
      env:
        - DIST=stretch PLATFORM=arm64
    - <<: *build_job
      arch: arm64-graviton2
      env:
        - DIST=buster PLATFORM=arm64
    - stage: deploy
      if: branch = master AND type = push
      env:
        - DISTS="stretch buster latest"
      before_install: mkdir $HOME/.docker
      install: 'echo "{ \"experimental\": \"enabled\" }" > $HOME/.docker/config.json'
      script:
        - bash pushmanifest
    - stage: deploy
      if: branch = master AND type = push
      env:
        - DIST="jessie"
      before_install: mkdir $HOME/.docker
      install: 'echo "{ \"experimental\": \"enabled\" }" > $HOME/.docker/config.json'
      script:
        - DISTS=jessie PLATFORMS=amd64 bash pushmanifest
