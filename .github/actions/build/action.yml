inputs:
  dist:
    description: 'Dist to build'
    default: 'buster'
  platform:
    description: 'Platform to build'
    default: 'amd64'
  is_latest:
    description: The created dist is also latest
    default: false
  build_snapshot:
    description: Build snapshot build
    default: false
outputs:
  snapshot-id:
    description: "Created snapshot id if requested to build it"
    value: ${{ steps.snapshot-id.outputs.snapshot-id }}
runs:
  using: "composite"
  steps:
    - name: Fix for Ubuntu Xenial apt-daily.service triggering
      run: |
        while sudo fuser /var/{lib/{dpkg,apt/lists},cache/apt/archives}/lock >/dev/null 2>&1; do
          sleep 1
        done
      shell: bash
    - run: sudo make .installed-requirements
      shell: bash
    - name: Install gcloud
      run: |
        if ! command -v gcloud &> /dev/null
          then
            echo "Installing gcloud"
            echo "deb https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

            apt-get update
            apt-get install -y google-cloud-sdk
        else
            echo "gcloud is installed"
        fi
      shell: bash
    - name: "Install QEMU"
      run: |
        set -x
        if [[ "${{ inputs.platform }}" == "arm64" ]]; then
          echo "Installing QEMU"
          # qemu-user-static fails with segfaults building bullseye
          # We will revisit this when 20.10 is allowed as build slave on GitHub Actions
          # https://bugs.launchpad.net/qemu/+bug/1749393
          # https://bugs.launchpad.net/ubuntu/+source/qemu/+bug/1928075
          if [[ "${{ inputs.dist }}" == "bullseye" ]]; then
            sudo tee /etc/apt/preferences.d/qemu <<EOF
        Package: *
        Pin: release n=focal
        Pin-Priority: 900
        Package: *
        Pin: release n=groovy
        Pin-Priority: 400
        EOF
            sudo tee /etc/apt/sources.list.d/groovy.list <<EOF
        deb http://archive.ubuntu.com/ubuntu groovy universe
        deb http://archive.ubuntu.com/ubuntu groovy-updates universe
        deb http://security.ubuntu.com/ubuntu groovy-security universe
        EOF
            sudo apt-get update -qq && sudo apt-get install -y -t groovy qemu-user-static
          else
            sudo apt-get update -qq && sudo apt-get install -y qemu-user-static
          fi
        else
            echo "QEMU is not required for platform ${{ inputs.platform }}"
        fi
      shell: bash
    - name: Build snapshot id
      id: snapshot-id
      run: |
        if ${{ inputs.build_snapshot }} ; then
           echo "::set-output name=snapshot-id::$(./snapshot_id)"
        fi
      shell: bash
    - name: "Build image"
      run: |
        set -x
        echo Building  ${{ inputs.dist }} - ${{ inputs.platform }}
        sudo -E bash -x buildone "${{ inputs.dist }}" "${{ inputs.platform }}"
        if ${{ inputs.build_snapshot }} ; then
             sudo -E bash -x buildone_snapshot "${{ inputs.dist }}" "${{ steps.snapshot-id.outputs.snapshot-id }}" "${{ inputs.platform }}"
        fi
        if ${{ inputs.is_latest }} ; then
          BASENAME=${BASENAME:?Undefined or empty BASENAME}
          echo "Tagging latest"
          docker tag $BASENAME:${{ inputs.dist }}-${{ inputs.platform }} $BASENAME:latest-${{ inputs.platform }}
        fi
      shell: bash
